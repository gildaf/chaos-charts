kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  generateName: argowf-ngc-no-data-loss
  namespace: litmus
  labels:
    subject: ngc-no-data-loss
spec:
  templates:
    - name: custom-chaos
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: install-chaos-experiments
            template: install-chaos-experiments
            arguments: {}
        - - name: deploy-monkey-app
            template: deploy-monkey-app
            arguments: { }
        - - name: deploy-monkey-app-service
            template: deploy-monkey-app-service
            arguments: { }
        - - name: pod-delete
            template: pod-delete
            arguments: {}
    - name: install-chaos-experiments
      inputs:
        artifacts:
          - name: pod-delete
            path: /tmp/pod-delete-pvx.yaml
            raw: #  installing the pod delete experiment
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Deletes a pod belonging to a deployment/statefulset/daemonset
                kind: ChaosExperiment

                metadata:
                  name: pod-delete
                  labels:
                    name: pod-delete
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 2.11.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos/go-runner:2.11.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-delete
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "15"
                      - name: RAMP_TIME
                        value: ""
                      - name: FORCE
                        value: "true"
                      - name: CHAOS_INTERVAL
                        value: "5"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: LIB
                        value: litmus
                      - name: TARGET_PODS
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-delete
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 2.11.0
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/pod-delete-pvx.yaml -n
            {{workflow.parameters.adminModeNamespace}} &&  sleep 30
        resources: {}
    - name: deploy-monkey-app
      inputs:
        artifacts:
          - name: monkey-app-deployment
            path: /tmp/monkey-app-deployment.yaml
            raw: #  installing the pod delete experiment
              data: >
                apiVersion: apps/v1
                
                kind: Deployment
                
                metadata:
                  name: ngc-monkey
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      app: ngc-monkey
                  template:
                    metadata:
                      labels:
                        app: ngc-monkey
                    spec:
                      containers:
                        - name: server
                          image: gcr.io/redis-dev-next-gen-cluster/ngc-monkey-server
                          imagePullPolicy: Always
                          ports:
                            - containerPort: 5000
      outputs: { }
      metadata: { }
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/monkey-app-deployment.yaml -n
            {{workflow.parameters.adminModeNamespace}} &&  sleep 20
        resources: { }
    - name: deploy-monkey-app-service
      inputs:
        artifacts:
          - name: monkey-app-service
            path: /tmp/monkey-app-service.yaml
            raw:
              data: >
                apiVersion: v1
                
                kind: Service
                
                metadata:
                  name: ngc-monkey
                spec:
                  selector:
                    app: ngc-monkey
                  ports:
                    - name: http
                      port: 5000
                      targetPort: 5000
                  type: ClusterIP
      outputs: { }
      metadata: { }
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/monkey-app-service.yaml -n
            {{workflow.parameters.adminModeNamespace}} &&  sleep 10
    - name: pod-delete
      inputs:
        artifacts:
          - name: pod-delete-pvx
            path: /tmp/chaosengine-pod-delete-pvx.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  generateName: pod-delete-pvx
                  labels:
                    instance_id: 1ce1e171-67f0-484f-b6a5-c6bd7dd80f95
                spec:
                  appinfo:
                    appns: default
                    applabel: RedisClusterRoles=FailoverCoordinator
                    appkind: statefulset
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-delete
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "10"
                            - name: FORCE
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: "40"  # kill just one pod (assuming a 3 nodes raft cluster)
                        probe:
                          - name: hello-monkey-app
                            type: httpProbe
                            mode: SOT
                            httpProbe/inputs:
                              url: "http://ngc-monkey:5000/hello"
                              responseTimeout: 1000  #in ms
                              method:
                                get:
                                  criteria: "=="
                                  responseCode: "200"
                            runProperties:
                              probeTimeout: 30
                              retry: 2
                              interval: 3
                              stopOnFailure: false
                          - name: start-traffic
                            type: httpProbe
                            mode: SOT
                            httpProbe/inputs:
                              url: "http://ngc-monkey:5000/run"
                              responseTimeout: 1000  #in ms
                              method:
                                post:
                                  contentType: "application/json; charset=UTF-8"
                                  body: "{\"db_name\":\"smalldb.default.svc.cluster.local\"}"
                                  criteria: "oneOf"
                                  responseCode: "200,201,202"
                            runProperties:
                              probeTimeout: 30
                              retry: 2
                              interval: 3
                              stopOnFailure: false
                          - name: stop-and-check
                            type: httpProbe
                            mode: EOT
                            httpProbe/inputs:
                              url: "http://ngc-monkey:5000/check"
                              responseTimeout: 2000  #in ms
                              method:
                                post:
                                  contentType: "application/json; charset=UTF-8"
                                  body: "{\"db_name\":\"smalldb.default.svc.cluster.local\"}"
                                  criteria: "=="
                                  responseCode: "200"
                            runProperties:
                              probeTimeout: 30
                              retry: 3
                              interval: 3
                              stopOnFailure: false
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-delete-pvx.yaml
          - -saveName=/tmp/engine-name
        resources: {}
  entrypoint: custom-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  serviceAccountName: argo-chaos
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
status:
  ? startedAt
  ? finishedAt
